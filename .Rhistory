volume = ifselse(volume<-4, -4, volume),
volume = cumsum(runif(n(), 100, 200)*c(1, volume))
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price))/price[1:n()-1],
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume<-4, -4, volume),
volume = cumsum(runif(n(), 100, 200)*volume)
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price))/price[1:n()-1],
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume<-4, -4, volume),
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume<-4, -4, volume),
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume<-4, -4, volume),
) %>% View
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
) %>% View
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
) %>% View
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
) %>% View
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 100, 200)*volume)
) %>% View
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 100, 200)*volume)
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 1000, 2000)*volume),
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data %>% arrange(date) %>% group_by(ticker) %>% mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 1000, 2000)*volume),
volume = volume + ifelse( min(volume) < 0 , -min(volume), 0 )
) %>% ggplot(aes(y=volume, x=date, color=ticker)) + geom_line()
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 1000, 2000)*volume),
volume = volume + ifelse( min(volume) < 0 , -min(volume), 0 )
)  %>% ungroup() -> price_data
price_data %>%
ggplot(aes(fill=ticker,color=ticker)) +
geom_histogram(aes(price), position="identity",alpha=0.5)
price_data %>% filter(ticker=="ABC") %>% ggplot(aes(x=date)) + geom_line(aes(y=(price-min(price))/(max(price)-min(price)))) + geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity')
price_data %>% filter(ticker=="ABC") %>% ggplot(aes(x=date)) +
geom_line(aes(y=(price-min(price))/(max(price)-min(price)))) +
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity', alpha=0.25)
price_data %>% ggplot(aes(x=date, color=ticker)) +
geom_line(aes(y=(price-min(price))/(max(price)-min(price)))) +
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity', alpha=0.25)
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker)) +
geom_line(aes(y=(price-min(price))/(max(price)-min(price)))) +
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity', alpha=0.25)
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity', alpha=0.25) +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), stat='identity', alpha=0.0) +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
?geom_bar
y=(volume-min(volume))/(max(volume)-min(volume)),
alpha=0.25
geom_bar(aes(
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume)),
alpha=0.25
), stat='identity') +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), alpha=0.25, stat='identity') +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
price_data %>%
mutate(
year = format(date, "%Y"),
quarter = quarters(date)
) %>%
group_by(
ticker,
year,
quarter
) %>%
summarise(
corr = cor(price, volume),
) %>%
group_by(ticker, year) %>%
spread(quarter, corr)
price_data %>% write_csv("./data/price_data.csv")
price_data %>%
group_by(ticker) %>%
summarise(cor(price, volume))
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
volume = replace(
volume,
runif(n()) < 0.25,
runif(n(), -2, 2)
),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 1000, 2000)*volume),
volume = volume + ifelse( min(volume) < 0 , -min(volume), 0 )
)  %>% ungroup() -> price_data
price_data %>%
ggplot(aes(fill=ticker,color=ticker)) +
geom_histogram(aes(price), position="identity",alpha=0.5)
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), alpha=0.25, stat='identity') +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
price_data %>%
group_by(ticker) %>%
summarise(cor(price, volume))
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
#  geom_bar(aes(
#    y=(volume-min(volume))/(max(volume)-min(volume))
#  ), alpha=0.25, stat='identity') +
#
source('~/.active-rstudio-document', echo=TRUE)
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
noise = runif(n()) < 0.25,
volume = replace(
volume,
noise,
runif(length(noise), -2, 2)
),
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = cumsum(runif(n(), 1000, 2000)*volume),
volume = volume + ifelse( min(volume) < 0 , -min(volume), 0 )
)  %>% ungroup() -> price_data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
price_data
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
noise = runif(n()) < 0.45
)
price_data
price_data %>% summarise()
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
noise = runif(n()) < 0.45,
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume),
volume = replace(
volume,
noise,
runif(length(noise), -2, 2)
)
)
price_data = data_frame(
ticker = c(rep("ABC", 825), rep("SCH", 911), rep("YRK", 1045)),
date = c(
as.Date("2018-12-31")-0:824,
as.Date("2018-12-31")-0:910,
as.Date("2018-12-31")-0:1044
),
price = c(
rev(cumsum(rnorm(825, 2.13, 20.3))),
rev(cumsum(rnorm(911, 5.13, 25.32))),
rev(cumsum(rnorm(1045, 1.25, 120.23)))
)
) %>%
group_by(ticker) %>%
mutate(
price = mean(price)*(price - min(price))/(max(price)-min(price))
) %>%
mutate(
price = replace(
price,
price == 0,
min(price[price > 0])*0.95
)
) %>%
arrange(date) %>% group_by(ticker) %>%
mutate(
volume=c(0, diff(price)/price[1:n()-1]),
volume = round(volume/0.01),
noise = runif(n()) < 0.45,
volume = ifelse(volume < 5, volume, 5),
volume = ifelse(volume <= -5, -5, volume)
)
price_data %>% mutate()
price_data %>% mutate(
volume = replace(
volume,
noise,
runif(length(noise), -2, 2)
)
)
price_data %>% mutate(
volume = length(noise)
)
price_data %>% mutate(
volume = replace(
volume,
noise,
runif(sum(noise), -2, 2)
)
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
price_data %>% ggplot(aes(x=date, color=ticker, fill=ticker))+
geom_bar(aes(
y=(volume-min(volume))/(max(volume)-min(volume))
), alpha=0.25, stat='identity') +
geom_line(aes(y=(price-min(price))/(max(price)-min(price))))
price_data %>% write_csv("./data/price_data.csv")
price_data %>%
mutate(
year = format(date, "%Y"),
quarter = quarters(date)
) %>%
group_by(
ticker,
year,
quarter
) %>%
summarise(
price_low = min(price),
price_high = max(price),
price_mean = mean(price),
price_first = price[row_number() == 1],
price_last = price[row_number() == n()],
)
price_data %>%
mutate(
year = format(date, "%Y"),
quarter = quarters(date)
) %>%
group_by(
ticker,
year,
quarter
) %>%
summarise(
corr = cor(price, volume),
) %>%
group_by(ticker, year) %>%
spread(quarter, corr)
source('~/.active-rstudio-document', echo=TRUE)
determine_age_group(0:100)
determine_age_group(0)
determine_age_group(2)
sapply(0:100, determine_age_group)
0.05:0.01:0.20
0.05:0.20
5:20/100
intial_amount = 100:500
interest_rate = 5:20/100
time = 10:20
initial_amount
intial_amount
intial_amount*(1+interest_rate)
intial_amount*(1+interest_rate[0])
intial_amount*(1+interest_rate[1])
intial_amount*(1+interest_rate)
2^4
intial_amount * (1+interest_rate) ^ time
comp_investment = function(intial_amount, interest_rate, time) {
intial_amount * (1+interest_rate) ^ time
}
comp_investment(100:200, 0.05, 10)
comp_investment(100, 0.05, 10)
comp_investment(100, 0.05, 10) == 162.9985
round(comp_investment(100, 0.05, 10)) == 162.9985
round(comp_investment(100, 0.05, 10)) == 163.00
comp_investment(10)
length(10:100)
data_frame(
initial_amount = rep(10:100, 2),
interest_rate = 0.05,
time = c(rep(20, 91),rep(50, 91))
)
data_frame(
initial_amount = rep(50:70, 2),
interest_rate = 0.05,
time = c(rep(20, 21),rep(50, 21))
)
data_frame(
initial_amount = rep(50:70, 2),
interest_rate = 0.05,
time = c(rep(20, 21),rep(50, 21))
) %>% View()
data_frame(
initial_amount = rep(c(50, 70, 90), 2),
interest_rate = 0.05,
time = c(rep(20, 3),rep(50, 3))
) %>% View()
some_matrix = matrix(c(
1,2,3,4,
0,2,3,1,
2,3,1,4
), nrow=3)
some_matrix[0]
some_matrix[1,1]
some_matrix[1,]
some_matrix[,1] # access first column
some_matrix[1:2,1] # access first and second row, first column
some_matrix[1,2:3] # access first and second row, first column
df = data.frame(
category = factor(c("A","A","B","C")),
age = c(10L,15L,20L,30L),
funds = c(23.1, 2.0, 100.31, 33.12)
)
df[["age"]]
df["age"]
df$age
df$age += 10
df$age = df$age+ 10
df
